version: 2
jobs:
  build:
    branches:
      only:
        - master
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Chmod permissions #if permission for Gradlew Dependencies fail, use this. 
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - run:
          name: assemble apk
          command: ./gradlew assembleDebug    
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples   
      - run:
          name: Deploy Release to GitHub
          command: bash .circleci/setup-github.sh
            
          # if [ $CIRCLE_BRANCH == 'dev' ]; then
          #    bash .circleci/setup-github.sh
          # fi
 build2:
    branches:
      only:
        - master
    working_directory: ~/code2
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradl$
      - run:
          name: Chmod permissions #if permission for Gradlew Dependencies fail,$
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - run:
          name: assemble apk
          command: ./gradlew assembleDebug
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradl$
      - run:
          name: assemble apk release
          command: ./gradlew assembleRelease


 workflows:
   version: 2

   awesome-workflow:
     jobs:
	- build
	- build2
